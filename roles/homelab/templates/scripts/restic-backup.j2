#!/usr/bin/env bash

# Variables
export RESTIC_REPOSITORY='s3:https://us-southeast-1.linodeobjects.com/com.hunterwittenborn.homelab'
export RESTIC_PASSWORD={{ restic_password | quote }}
export AWS_ACCESS_KEY_ID={{ restic_aws_access_key_id | quote }}
export AWS_SECRET_ACCESS_KEY={{ restic_aws_secret_access_key | quote }}

case "${1}" in
	backup)
		mapfile -t directories < <(find '/var/www' -maxdepth 1 -type d -not -path '/var/www' -not -path '/var/www/mailcow.hunterwittenborn.com')

		for i in "${directories[@]}"; do
			cd "${i}"

			failed_update=1
			failed_stop=1
			failed_start=1
			dir="$(basename "${i}")"

			# Check.
			if ! [[ -f './service.sh' ]]; then
				echo "=== Skipping '${i}'..."
				continue
			else
				echo "=== Backing up '${i}'..."
			fi
			
			# Update.
			echo "Updating services..."
			./service.sh update && failed_update=0

			if (( "${failed_update}" )); then
				echo "Failed to update services. Skipping folder..."
				continue
			fi
			
			# Stop.
			echo "Stopping services..."
			./service.sh stop && failed_stop=0
			
			if (( "${failed_stop}" )); then
				echo "Failed to stop services. Skipping folder..."
				continue
			fi
			
			# Backup.
			extra_restic_opts=()

			if [[ -n "${VERBOSE}" ]]; then
				extra_restic_opts+=('--verbose')
			fi

			echo "Backing up..."
			if ! restic backup "${i}" --tag "${dir}" "${extra_restic_opts[@]}"; then
				echo "Failed to back up."
				continue
			fi

			echo "Pruning backups..."
			if ! restic forget --tag "${dir}" --keep-last 7 --keep-daily 7 --keep-weekly 3; then
				echo "Failed to prune backups."
				continue
			fi

			# Start.
			echo "Bringing service back up..."
			./service.sh start && failed_start=0

			if (( "${failed_start}" )); then
				echo "Failed to start services."
			fi
		done

		echo "=== Verifying backups..."
		if ! restic check; then
			echo "Backup verification failed."
			exit 1
		fi

		echo "=== Done!"
		;;
	*)
		restic "${@}"
		;;
esac

# vim: set expandtab ts=4 sw=4 noet:
