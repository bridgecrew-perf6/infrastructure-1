#!/usr/bin/env bash

# Variables
export RESTIC_REPOSITORY='s3:https://us-southeast-1.linodeobjects.com/com.hunterwittenborn.homelab'
export RESTIC_PASSWORD={{ restic_password | quote }}
export AWS_ACCESS_KEY_ID={{ restic_aws_access_key_id | quote }}
export AWS_SECRET_ACCESS_KEY={{ restic_aws_secret_access_key | quote }}

case "${1}" in
	backup)
    	temp_dir='/var/tmp/restic_backup'

    	if [[ -e "${temp_dir}" ]]; then
			echo "=== Removing backup directory..."
			if ! rm -r "${temp_dir}" --interactive=never; then
				echo "Failed to remove backup directory."
				exit 1
			fi
		fi

		echo "=== Creating backup directory..."
		if ! mkdir -p "${temp_dir}"; then
			echo "Failed to create backup directory."
			exit 1
		fi

		mapfile -t directories < <(find /var/www/ -maxdepth 1 -type d -not -path '/var/www/')

		for i in "${directories[@]}"; do
			failed_update=1
			failed_stop=1
			failed_start=1

			echo "=== Backing up '${i}'..."
			cd "${i}"
		
			if [[ -f './service.sh' ]]; then
				echo "Updating services..."
				./service.sh update && failed_update=0

				if (( "${failed_update}" )); then
					echo "Failed to update services. Skipping folder..."
					continue
				fi

				echo "Stopping services..."
				./service.sh stop && failed_stop=0
			
				if (( "${failed_stop}" )); then
					echo "Failed to stop services. Skipping folder..."
					continue
				fi
			fi

			echo "Copying files to backup directory..."
			dirname="$(basename "${i}")"
			cp "${i}" "${temp_dir}/${dirname}" -R

			if [[ -f './service.sh' ]]; then
				echo "Bringing service back up..."
				./service.sh start && failed_start=1

				if (( "${failed_start}" )); then
					echo "Failed to start services."
				fi
			fi
		done

		echo "=== Backing up to S3..."
		if ! restic --verbose backup "${temp_dir}"; then
			echo "Failed to backup to S3."
			exit 1
		fi

		echo "=== Verifying backups..."
		if ! restic check; then
			echo "Backup verification failed."
			exit 1
		fi

		echo "=== Running backup pruner..."
		if ! restic forget --keep-last 7 --keep-daily 7 --keep-weekly 3; then
			echo "Backup pruner failed..."
		fi

		echo "=== Verifying backups one last time..."
		if ! restic check; then
			echo "Backup verification failed."
			exit 1
		fi

		echo "=== Removing temporary backup directory..."
		if ! rm -r --interactive=never "${temp_dir}"; then
			echo "Failed to remove backup directory."
			exit 1
		fi

		echo "=== Done!"
		;;
	*)
		restic "${@}"
		;;
esac

# vim: set expandtab ts=4 sw=4 noet:
